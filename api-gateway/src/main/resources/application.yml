server:
  port: 8080

spring:
  application:
    name: api-gateway

  cloud:
    gateway:
      routes:
        - id: auth
          uri: lb://USER
          predicates:
            - Path=/api/auth/**

        - id: user
          uri: lb://USER
          predicates:
            - Path=/api/users/**
          filters:
            - name: RoleAuth
              args:
                roles: [ ADMIN ]

        - id: service1-unauthorized
          uri: lb://SERVICE1
          predicates:
            - Path=/api/unauthorized

        - id: service1
          uri: lb://SERVICE1
          predicates:
            - Path=/api/service1/**
          filters:
            - name: RoleAuth
              args:
                roles: [ ADMIN, MODERATOR, USER ]

        - id: service2-all
          uri: lb://SERVICE2
          predicates:
            - Path=/api/service2/all/**
          filters:
            - name: RoleAuth
              args:
                roles: [ ADMIN, MODERATOR, USER ]

        - id: service2-admin
          uri: lb://SERVICE2
          predicates:
            - Path=/api/service2/admin/**
          filters:
            - name: RoleAuth
              args:
                roles: [ ADMIN ]

        - id: service2-moderator
          uri: lb://SERVICE2
          predicates:
            - Path=/api/service2/moderator/**
          filters:
            - name: RoleAuth
              args:
                roles: [ MODERATOR ]

        - id: service2-admin-moderator
          uri: lb://SERVICE2
          predicates:
            - Path=/api/service2/admin-moderator/**
          filters:
            - name: RoleAuth
              args:
                roles: [ ADMIN, MODERATOR ]

        - id: service2-user
          uri: lb://SERVICE2
          predicates:
            - Path=/api/service2/user/**
          filters:
            - name: RoleAuth
              args:
                roles: [ USER ]

        - id: service3-all
          uri: lb://SERVICE3
          predicates:
            - Path=/api/service3
          filters:
            - name: RoleAuth
              args:
                roles: [ ADMIN, MODERATOR, USER ]

        - id: service3-admin
          uri: lb://SERVICE3
          predicates:
            - Path=/api/service3/admin, /api/service3/admin2
          filters:
            - name: RoleAuth
              args:
                roles: [ ADMIN ]

        - id: service3-moderator
          uri: lb://SERVICE3
          predicates:
            - Path=/api/service3/moderator, /api/service3/moderator2
          filters:
            - name: RoleAuth
              args:
                roles: [ MODERATOR ]

        - id: service3-admin-moderator
          uri: lb://SERVICE3
          predicates:
            - Path=/api/service3/admin-moderator, /api/service3/admin-moderator2
          filters:
            - name: RoleAuth
              args:
                roles: [ ADMIN, MODERATOR ]

        - id: service3-user
          uri: lb://SERVICE3
          predicates:
            - Path=/api/service3/user, /api/service3/user2
          filters:
            - name: RoleAuth
              args:
                roles: [ USER ]