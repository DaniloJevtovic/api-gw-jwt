services:
  postgres:
    container_name: postgres
    image: postgres:14.6
    restart: unless-stopped
    environment:
      POSTGRES_USER: lemur
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5433:5432"
    networks:
      - postgres

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres

  mysql:
    container_name: mysql
    image: mysql:5.7
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: user-auth
      MYSQL_USER: root
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: password
    ports:
      - "3307:3306"
    volumes:
      - my-db:/var/lib/mysql
    networks:
      - mysql

  eureka-server:
    container_name: eureka-server
    image: eureka-server:latest
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring

  api-gateway:
    container_name: api-gateway
    image: api-gateway:latest
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
    depends_on:
      - eureka-server

  user:
    container_name: user
    image: user:latest
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
      - postgres
      #- mysql
    depends_on:
      - eureka-server
      - postgres
      #- mysql

  service1:
    container_name: service1
    image: service1:latest
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
    depends_on:
      - eureka-server

  service2:
    container_name: service2
    image: service2:latest
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
    depends_on:
      - eureka-server

  service3:
    container_name: service3
    image: service3:latest
    ports:
      - "8084:8084"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
    depends_on:
      - eureka-server

networks:
  spring:
    driver: bridge
  postgres:
    driver: bridge
  mysql:
    driver: bridge

volumes:
  my-db:
  postgres:
  pgadmin:

# docker compose up -d
# docker compose start
# docker compose stop
# docker compose down
# docker rmi eureka-server api-gateway user service1 service2 service3